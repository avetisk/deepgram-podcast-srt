#!/usr/bin/env node
const { resolve } = require("path")
require("dotenv").config({ path: resolve(__dirname, ".env") })
const { mkdirSync } = require("fs")
const { writeFile } = require("fs/promises")
const { Deepgram } = require("@deepgram/sdk")
const deepgram = new Deepgram(process.env.DEEPGRAM_API_KEY)

const OUT_DIR = resolve(process.cwd(), "output")

try {
  mkdirSync(OUT_DIR)
} catch (err) {
  if (!err.message.startsWith("EEXIST:")) {
    console.error(err)
    process.exit(1)
  }
}

const urls = process.argv.slice(2)

if (!urls.length) {
  console.error("No URL was provided.")
  process.exit(2)
}

Promise.allSettled(
  urls.map(async (url) => {
    const response = await deepgram.transcription.preRecorded(
      { url },
      { punctuate: true, utterances: true, model: "general", language: "fr" }
    )
    const filename = url.replace(/.*\/([^/]+\.\w+)$/, `${OUT_DIR}/$1`)

    try {
      await writeFile(`${filename}.json`, JSON.stringify(response.results), {
        flag: "w",
      })
      await writeFile(
        `${filename}.txt`,
        response.results.channels[0].alternatives[0].transcript,
        { flag: "w" }
      )
      await writeFile(`${filename}.srt`, response.toSRT(), {
        flag: "w",
      })
    } catch (err) {
      console.error(err)
    }
  })
)
